{
	"info": {
		"_postman_id": "ef083ef5-034f-4307-a651-b76dbd408017",
		"name": "tradeMeSandBox-Negative",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "RetrieveGeneralCategories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Checking all subcategories returned, and the given subcategory exists in\", function () {\r",
							"\r",
							"    console.log(\"Post-Transaction: CheckingtheCountsofGivenSubcategory Start\");\r",
							"\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    var arr =[];\r",
							"\r",
							"    if (typeof(pm.response.json().Subcategories) !== \"undefined\"){\r",
							"\r",
							"        var Subcategories = jsonData.Subcategories;  \r",
							"\r",
							"        // Traverse all Subcategories from response, and find wheter a specific subcategory is in.\r",
							"        for (i in Subcategories){\r",
							"\r",
							"            var Name = Subcategories[i].Name;\r",
							"\r",
							"            arr.push(Name);\r",
							"\r",
							"            if(Name == \"Antiques & collectables\"){\r",
							"\r",
							"                var SpecificSubcategories = Name;\r",
							"\r",
							"            }\r",
							"        }\r",
							"        \r",
							"        console.log(\"Subcategories counts to: \" + jsonData.Subcategories.length);\r",
							"\r",
							"        console.log(\"All subcategories name listed below: \");\r",
							"\r",
							"        console.log(arr);\r",
							"\r",
							"        // checkpoint: whether subcategory - 'Antiques & collectables' exists in the response      \r",
							"        if(typeof(SpecificSubcategories) !== \"undefined\" && SpecificSubcategories.length >= 1 ){\r",
							"\r",
							"            console.log(\"Subcategory - Antiques & collectables existed\");\r",
							"\r",
							"            console.log(\"Post-Transaction: CheckingtheCountsofGivenSubcategory Pass\");\r",
							"            \r",
							"        }\r",
							"        else{\r",
							"\r",
							"            console.log(\"Subcategory - Antiques & collectables is not existed\");\r",
							"\r",
							"            console.log(\"Post-Transaction: CheckingtheCountsofGivenSubcategory Failed\");\r",
							"\r",
							"        }\r",
							"     \r",
							"    }\r",
							"\r",
							"    else{\r",
							"\r",
							"        console.log(pm.response.json());\r",
							"\r",
							"        console.log(\"Didn't catch the Subcategory field\");\r",
							"        \r",
							"        console.log(\"Post-Transaction: CheckingtheCountsofGivenSubcategory Failed\");\r",
							"\r",
							"    }\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/v1/Categories.JSON?depth=-10",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"v1",
						"Categories.JSON"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "depth",
							"value": "-10"
						}
					]
				}
			},
			"response": [
				{
					"name": "RetrieveGeneralCategories-Neg-depth=10",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/v1/Categories.JSON?depth=-10",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"v1",
								"Categories.JSON"
							],
							"query": [
								{
									"key": "depth",
									"value": "-10"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "ETag",
							"value": "\"g3y/pVZC5T1nk2zlLkqWnHyx+wM=\""
						},
						{
							"key": "X-Correlation-ID",
							"value": "b2104d4c-5f45-4f70-a2b5-4ab8591fef46"
						},
						{
							"key": "X-Request-ID",
							"value": "249b097d-c04f-4db5-adee-3b0ba449b645"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "ETag"
						},
						{
							"key": "Date",
							"value": "Sat, 24 Jul 2021 05:00:40 GMT"
						},
						{
							"key": "Content-Length",
							"value": "71"
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						}
					],
					"cookie": [],
					"body": "{\n    \"Name\": \"Root\",\n    \"Number\": \"\",\n    \"Path\": \"\",\n    \"AreaOfBusiness\": 0,\n    \"IsLeaf\": false\n}"
				}
			]
		},
		{
			"name": "GeneralSearch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Post-Transaction: CheckingListingIdHasBuyNow Start\");\r",
							"\r",
							"pm.test(\"GetListingIdHasBuyNow\", function () {\r",
							"\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    var Page = jsonData.Page;\r",
							"\r",
							"    var PageSize = jsonData.PageSize;\r",
							"\r",
							"    var arr =[];\r",
							"\r",
							"    var List = jsonData.List;\r",
							"\r",
							"    if (typeof(List) !== \"undefined\"){\r",
							"\r",
							"        for (i in List){\r",
							"\r",
							"            var ListingId = List[i].ListingId;\r",
							"\r",
							"            //Only pick the items that has the 'HasBuyNow' feature and the BuyNowPrice <= $20\r",
							"            if(List[i].HasBuyNow == true && List[i].BuyNowPrice <=20){\r",
							"\r",
							"                arr.push(ListingId);\r",
							"\r",
							"                }\r",
							"\r",
							"        }\r",
							"\r",
							"        postman.setEnvironmentVariable('ListingIdHasBuyNowCount', arr.length);  \r",
							"\r",
							"    }\r",
							"\r",
							"    if(Array.isArray(arr) && arr.length === 0){        \r",
							"\r",
							"        console.log(pm.response.json());\r",
							"\r",
							"        console.log(\"Didn't fetch any ListingId has the 'HasBuyNow' feature: \" +SingleListingId);\r",
							"\r",
							"        console.log(\"Post-Transaction: CheckingListingIdHasBuyNow Failed\");\r",
							"\r",
							"    }\r",
							"    else{\r",
							"\r",
							"        postman.setEnvironmentVariable('ListingIdHasBuyNow', arr);\r",
							"\r",
							"        console.log(\"Page: \"+Page+\", total items: \"+PageSize);\r",
							"        \r",
							"        console.log(\"'HasBuyNow' items counts to: \" + arr.length + \", ListingId details: \");\r",
							"\r",
							"        console.log(arr);\r",
							"\r",
							"        // Randomly get one ListingId from the stored ListingId list that has the 'HasBuyNow' feature.\r",
							"        // The ListingId will be picked for downstream transaction 'RetrieveTheDetailsOfASingleListing' to use.\r",
							"        var ListingIdHasBuyNowCount = pm.environment.get(\"ListingIdHasBuyNowCount\");\r",
							"\r",
							"        var ListingIdHasBuyNow=pm.environment.get(\"ListingIdHasBuyNow\").split(\",\");\r",
							"\r",
							"        postman.setEnvironmentVariable('SingleListingId', ListingIdHasBuyNow[Math.floor(Math.random() * Number(ListingIdHasBuyNowCount))]);\r",
							"\r",
							"        var SingleListingId = pm.environment.get(\"SingleListingId\");\r",
							"        \r",
							"        console.log(\"Get random SingleListingId: \" +SingleListingId);\r",
							"\r",
							"        console.log(\"Post-Transaction: CheckingListingIdHasBuyNow Pass\");\r",
							"\r",
							"    }\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth1",
					"oauth1": [
						{
							"key": "consumerKey",
							"value": "4B34BCCFD24CF3497EE36E54204AA7E2",
							"type": "string"
						},
						{
							"key": "consumerSecret",
							"value": "0D8635F6A51F0EA381A8D97F5D7812E2",
							"type": "string"
						},
						{
							"key": "token",
							"value": "38B073E4F6C65F722A0CF964492EA6A2",
							"type": "string"
						},
						{
							"key": "tokenSecret",
							"value": "293BD08354D18D33871C4EBB02D67ACA",
							"type": "string"
						},
						{
							"key": "signatureMethod",
							"value": "PLAINTEXT",
							"type": "string"
						},
						{
							"key": "addParamsToHeader",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "version",
							"value": "1.0",
							"type": "string"
						},
						{
							"key": "addEmptyParamsToSign",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/v1/Search/General.JSON?buy=BuyNow",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"v1",
						"Search",
						"General.JSON"
					],
					"query": [
						{
							"key": "buy",
							"value": "BuyNow"
						},
						{
							"key": "rows",
							"value": "500",
							"disabled": true
						},
						{
							"key": "page",
							"value": "4",
							"disabled": true
						}
					]
				}
			},
			"response": [
				{
					"name": "GeneralSearch-Neg-buy=BuyNow",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/v1/Search/General.JSON?buy=BuyNow",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"v1",
								"Search",
								"General.JSON"
							],
							"query": [
								{
									"key": "buy",
									"value": "BuyNow"
								},
								{
									"key": "rows",
									"value": "500",
									"disabled": true
								},
								{
									"key": "page",
									"value": "4",
									"disabled": true
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "X-Rate-Limit-Limit",
							"value": "1000"
						},
						{
							"key": "X-Rate-Limit-Remaining",
							"value": "999"
						},
						{
							"key": "X-Rate-Limit-Reset",
							"value": "2556"
						},
						{
							"key": "X-Correlation-ID",
							"value": "83fc8555-51b5-4a50-a0d4-9390492e10f3"
						},
						{
							"key": "X-Request-ID",
							"value": "8eaa3cab-1ba3-4c81-8a1a-cfcc8581e588"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "ETag"
						},
						{
							"key": "Date",
							"value": "Sat, 31 Jul 2021 04:17:25 GMT"
						},
						{
							"key": "Content-Length",
							"value": "157"
						},
						{
							"key": "X-UA-Compatible",
							"value": "IE=Edge"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						}
					],
					"cookie": [],
					"body": "{\n    \"Request\": \"https://api.tmsandbox.co.nz/v1/Search/General.JSON?buy=BuyNow\",\n    \"ErrorDescription\": \"The server encountered an error processing the request.\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "oauth1",
		"oauth1": [
			{
				"key": "tokenSecret",
				"value": "293BD08354D18D33871C4EBB02D67ACA",
				"type": "string"
			},
			{
				"key": "token",
				"value": "38B073E4F6C65F722A0CF964492EA6A2",
				"type": "string"
			},
			{
				"key": "consumerSecret",
				"value": "0D8635F6A51F0EA381A8D97F5D7812E2",
				"type": "string"
			},
			{
				"key": "consumerKey",
				"value": "4B34BCCFD24CF3497EE36E54204AA7E2",
				"type": "string"
			},
			{
				"key": "signatureMethod",
				"value": "PLAINTEXT",
				"type": "string"
			},
			{
				"key": "addParamsToHeader",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "version",
				"value": "1.0",
				"type": "string"
			},
			{
				"key": "addEmptyParamsToSign",
				"value": false,
				"type": "boolean"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}